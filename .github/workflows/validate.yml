name: Dependency / formatting validation

on:
  workflow_call:
    inputs:
      sdk:
        required: true
        type: string

jobs:
  validate-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ inputs.sdk }}

      - name: Validate dependencies
        run: dart run dependency_validator

  validate-formatting:
    runs-on: ubuntu-latest
    # Only run on one sdk version in case there are conflicts
    if: inputs.sdk != '2.18.7'
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ inputs.sdk }}

      - name: Verify formatting
        run: dart run dart_dev format --check

  analysis-pre-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ inputs.sdk }}
      - id: install
        name: Install dependencies
        run: dart pub get

      # Analyze before generated files are created to verify that component boilerplate analysis is "clean" without the need for building
      - name: Analyze example source (pre-build)
        run: |
          # Analyze lib to ensure public APIs don't depend on build-to-cache files,
          # which could cause analysis issues for consumers who haven't run a build yet.
          dart analyze lib
          dart analyze example/boilerplate_versions