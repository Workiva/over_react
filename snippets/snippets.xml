<template name="orAdvStless" value="import 'package:over_react/over_react.dart';&#10;&#10;part '$FileName$.over_react.g.dart';&#10;&#10;UiFactory&lt;$MyComponent$Props&gt; $MyComponent$ = &#10;    castUiFactory(_$$$MyComponent$); // ignore: undefined_identifier&#10;&#10;mixin $MyComponent$PropsMixin on UiProps {}&#10;&#10;class $MyComponent$Props = UiProps with $MyComponent$PropsMixin; &#10;&#10;class $MyComponent$Component extends UiComponent2&lt;$MyComponent$Props&gt; {&#10;  @override&#10;  get defaultProps =&gt; (newProps());&#10;&#10;  @override&#10;  render() {}&#10;}" description="Creates a stateless over_react component with a props class alias" toReformat="false" toShortenFQNames="true">
  <variable name="FileName" expression="" defaultValue="&quot;foo&quot;" alwaysStopAt="true" />
  <variable name="MyComponent" expression="" defaultValue="&quot;Foo&quot;" alwaysStopAt="true" />
  <context>
    <option name="DART" value="true" />
  </context>
</template>
<template name="orAdvStful" value="import 'package:over_react/over_react.dart';&#10;&#10;part '$FileName$.over_react.g.dart';&#10;&#10;UiFactory&lt;$MyComponent$Props&gt; $MyComponent$ = &#10;    castUiFactory(_$$$MyComponent$); // ignore: undefined_identifier&#10;&#10;mixin $MyComponent$PropsMixin on UiProps {}&#10;&#10;class $MyComponent$Props = UiProps with $MyComponent$PropsMixin; &#10;&#10;mixin $MyComponent$StateMixin on UiState {}&#10;&#10;class $MyComponent$State = UiState with $MyComponent$StateMixin; &#10;&#10;class $MyComponent$Component extends UiStatefulComponent2&lt;$MyComponent$Props, $MyComponent$State&gt; {&#10;  @override&#10;  get defaultProps =&gt; (newProps());&#10;&#10;  @override&#10;  get initialState =&gt; (newState());&#10;&#10;  @override&#10;  render() {}&#10;}" description="Creates a stateful over_react component with props and state class aliases" toReformat="false" toShortenFQNames="true">
  <variable name="FileName" expression="" defaultValue="&quot;foo&quot;" alwaysStopAt="true" />
  <variable name="MyComponent" expression="" defaultValue="&quot;Foo&quot;" alwaysStopAt="true" />
  <context>
    <option name="DART" value="true" />
  </context>
</template>
<template name="orStless" value="import 'package:over_react/over_react.dart';&#10;&#10;part '$FileName$.over_react.g.dart';&#10;&#10;UiFactory&lt;$MyComponent$Props&gt; $MyComponent$ = &#10;    castUiFactory(_$$$MyComponent$); // ignore: undefined_identifier&#10;&#10;mixin $MyComponent$Props on UiProps {}&#10;&#10;class $MyComponent$Component extends UiComponent2&lt;$MyComponent$Props&gt; {&#10;  @override&#10;  get defaultProps =&gt; (newProps());&#10;&#10;  @override&#10;  render() {}&#10;}" description="Creates an abbreviated stateful over_react component" toReformat="false" toShortenFQNames="true">
  <variable name="FileName" expression="" defaultValue="&quot;foo&quot;" alwaysStopAt="true" />
  <variable name="MyComponent" expression="" defaultValue="&quot;Foo&quot;" alwaysStopAt="true" />
  <context>
    <option name="DART" value="true" />
  </context>
</template>
<template name="orStlessConnect" value="import 'package:over_react/over_react.dart';&#10;import 'package:over_react/over_react_redux.dart';&#10;&#10;part '$FileName$.over_react.g.dart';&#10;&#10;UiFactory&lt;$MyComponent$Props&gt; $MyComponent$ = connect&lt;$SomeReduxStoreState$, $MyComponent$Props&gt;(&#10;  mapStateToProps: (state) =&gt; ($MyComponent$()),&#10;  mapDispatchToProps: (dispatch) =&gt; ($MyComponent$()),&#10;)(castUiFactory(_$$$MyComponent$)); // ignore: undefined_identifier&#10;&#10;mixin $MyComponent$Props on UiProps {}&#10;&#10;class $MyComponent$Component extends UiComponent2&lt;$MyComponent$Props&gt; {&#10;  @override&#10;  get defaultProps =&gt; (newProps());&#10;&#10;  @override&#10;  render() { }&#10;}" description="Creates a stateless and connected over_react component" toReformat="false" toShortenFQNames="true">
  <variable name="FileName" expression="" defaultValue="&quot;foo&quot;" alwaysStopAt="true" />
  <variable name="MyComponent" expression="" defaultValue="&quot;Foo&quot;" alwaysStopAt="true" />
  <variable name="SomeReduxStoreState" expression="" defaultValue="&quot;Foo&quot;" alwaysStopAt="true" />
  <context>
    <option name="DART" value="true" />
  </context>
</template>
<template name="orStful" value="import 'package:over_react/over_react.dart';&#10;&#10;part '$FileName$.over_react.g.dart';&#10;&#10;UiFactory&lt;$MyComponent$Props&gt; $MyComponent$ = &#10;    castUiFactory(_$$$MyComponent$); // ignore: undefined_identifier&#10;&#10;mixin $MyComponent$Props on UiProps {}&#10;&#10;mixin $MyComponent$State on UiState {}&#10;&#10;class $MyComponent$Component extends UiStatefulComponent2&lt;$MyComponent$Props, $MyComponent$State&gt; {&#10;  @override&#10;  get defaultProps =&gt; (newProps());&#10;&#10;  @override&#10;  get initialState =&gt; (newState());&#10;&#10;  @override&#10;  render() {}&#10;}" description="Creates an abbreviated stateful over_react component" toReformat="false" toShortenFQNames="true">
  <variable name="FileName" expression="" defaultValue="&quot;foo&quot;" alwaysStopAt="true" />
  <variable name="MyComponent" expression="" defaultValue="&quot;Foo&quot;" alwaysStopAt="true" />
  <context>
    <option name="DART" value="true" />
  </context>
</template>
<template name="orFunc" value="import 'package:over_react/over_react.dart';&#10;&#10;part '$FileName$.over_react.g.dart';&#10;&#10;UiFactory&lt;$MyComponent$Props&gt; $MyComponent$ = uiFunction(&#10;  (props) {},&#10;  _$$$MyComponent$Config, // ignore: undefined_identifier&#10;);&#10;&#10;mixin $MyComponent$Props on UiProps {}" description="Creates an abbreviated over_react function component" toReformat="false" toShortenFQNames="true">
<variable name="FileName" expression="" defaultValue="&quot;foo&quot;" alwaysStopAt="true" />
<variable name="MyComponent" expression="" defaultValue="&quot;Foo&quot;" alwaysStopAt="true" />
<context>
  <option name="DART" value="true" />
</context>
</template>
<template name="orAdvFunc" value="import 'package:over_react/over_react.dart';&#10;&#10;part '$FileName$.over_react.g.dart';&#10;&#10;UiFactory&lt;$MyComponent$Props&gt; $MyComponent$ = uiFunction(&#10;  (props) {},&#10;  _$$$MyComponent$Config, // ignore: undefined_identifier&#10;);&#10;&#10;mixin $MyComponent$PropsMixin on UiProps {}&#10;&#10;class $MyComponent$Props = UiProps with $MyComponent$PropsMixin;" description="Creates an over_react function component with a props class alias" toReformat="false" toShortenFQNames="true">
<variable name="FileName" expression="" defaultValue="&quot;foo&quot;" alwaysStopAt="true" />
<variable name="MyComponent" expression="" defaultValue="&quot;Foo&quot;" alwaysStopAt="true" />
<context>
  <option name="DART" value="true" />
</context>
</template>
